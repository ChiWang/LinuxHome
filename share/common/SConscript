#=============================================================================
#       FileName :          SConscript
#       Version  :          0.0.1
#       Author   :          Chi    (chiwang@mail.ustc.edu.cn)
#       Time     :          2013-07-24   21:51:55
#
#------------------------------------------------------------------------------
#       Description  :
#           Using Root
#               ARGUMENTS.get('root',value):        set default use(value=1) root;
#               if execute "scons root=0"   will not use root
#           Using RooFit
#               ARGUMENTS.get('roofit',value):      set default use(value=0) roofit;
#               if execute "scons roofit=1" will not use roofit
#           Using rootcint
#               ARGUMENTS.get('rootcint',value):    set default use(value=0) root;
#               if execute "scons rootcint=0"   will not use rootcint
#           Using Geant4
#               ARGUMENTS.get('g4',value):          set default use(value=1) geant4;
#               if execute "scons g4=0"   will not use geant4
#           Using OpenMP
#               ARGUMENTS.get('omp',value):         set default use(value=1) OpenMP;
#               if execute "scons omp=0"   will not use OpenMP
#
#------------------------------------------------------------------------------
#       History  :
#                                          Update:  2013-09-20   12:42:21
#=============================================================================

import os
env = Environment(ENV = os.environ)
#env['CXX'] = 'rootcint'

#   set the programme name
ExeName='MyX'

#   set debug modle.
#    if yes, then can use gdb:  http://www.ibm.com/developerworks/cn/linux/sdk/gdb/
if int(ARGUMENTS.get('debug',0)):
    env.Prepend(CCFLAGS = '-g')
    env.Append(CCFLAGS = '-DDEBUG')
else:
    env.Append(CCFLAGS = '-DRELEASE')

#   set Geant4 environment
if int(ARGUMENTS.get('g4',0)):
    g4sys=os.environ['G4INSTALL']
    env.PrependENVPath('PATH', g4sys+'/../../../bin')
    env.ParseConfig("geant4-config --cflags --libs")

#   set Root environment
if int(ARGUMENTS.get('root',0)):
    rootsys=os.environ['ROOTSYS']
    env.PrependENVPath('PATH', rootsys+'/bin')
    env.ParseConfig("root-config --cflags --libs")
    if int(ARGUMENTS.get('roofit',0)):
        env.Append(LIBS=['RooFitCore','RooFit'])
#   use rootcint
if int(ARGUMENTS.get('rootcint',0)):
    env['CXX'] = 'rootcint'


#   set OpenMP
if int(ARGUMENTS.get('omp',0)):
    ExeName=ExeName+"_omp"
    env.MergeFlags('-fopenmp')

#   include
env.Append(CPPPATH = '../include')

#   the following 3 lines for checking your setted value
#for item in sorted(env.Dictionary().items()):
#  print "V = '%s',\t\tValue = '%s'" % item
#Exit(1)

#   main build
env.Program('../'+ExeName,Glob("*cc"))


